[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "pyfts"
requires-python = ">=3.10"
dynamic = ['description', 'license', 'readme', 'version']

dependencies = ["numpy==1.26.4"]

[project.optional-dependencies]
test = ["pytest==8.2.1", "pytest-cov[all]"]
all = ["pyfts[test]"]

[tool.maturin]
bindings = "pyo3"
features = ["pyo3/extension-module"]
module-name = "pyfts._core"

[tool.pytest.ini_options]
addopts = "-v --cov src --no-cov-on-fail --disable-warnings"
testpaths = ["tests"]

[tool.ruff]
target-version = "py310"
line-length = 100

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "UP",  # pyupgrade
    "I",   # import sorting
    "N",   # pep8 naming
    "ISC", # flake8 implicit string concat
    "PTH", # flake8-use-pathlib use Path library
]

ignore = [
    "D417", # documentation for every function parameter.
    "N806", # ignore uppercased variables
    "N812", # import as uppercased
    "N803", # lowercased args
    "N817", # imported as acryonym
    "B023", # doesn't bind loop var, we do this a lot in torch
    "D100", # module-level docstrings
    "N805", # first param needs to be self; pydantic breaks this sometimes
]

[tool.ruff.lint.isort]
known-first-party = ["pyfts", "tests"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false
